#include "queue.h"

/*void queue_init(Queue *q) {
    q->head = 0;
    q->tail = 0;
    q->size = 0;
}

bool queue_is_empty(Queue *q) {
    return q->size == 0;
}

bool queue_is_full(Queue *q) {
    return q->size == QUEUE_SIZE;
}

bool queue_enqueue(Queue *q, DecodedDataPacket item) {
    if (queue_is_full(q)) {
        return false;
    }

    q->buffer[q->tail] = item;
    q->tail = (q->tail + 1) % QUEUE_SIZE;
    q->size++;
    return true;
}

bool queue_dequeue(Queue *q, DecodedDataPacket *item) {
    if (queue_is_empty(q)) {
        return false;
    }

    *item = q->buffer[q->head];
    q->head = (q->head + 1) % QUEUE_SIZE;
    q->size--;
    return true;
}*/

uint16_t get_data_packet_size(DecodedDataPacket *packet) {
    uint16_t size = 0;
    size += 8+packet->message_length * 8;
    return size;
}


